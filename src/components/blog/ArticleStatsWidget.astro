---
// Article Stats Widget Component
// Menampilkan statistik artikel seperti waktu baca, kata, dan tanggal publikasi
export interface Props {
  readingTime?: number;
  wordCount?: number;
  publishDate?: Date;
  lastModified?: Date;
  category?: string;
  tags?: string[];
  author?: string;
  className?: string;
}

const {
  readingTime = 5,
  wordCount = 1200,
  publishDate = new Date(),
  lastModified,
  category = 'Technical',
  tags = [],
  author = 'Konxc',
  className = ''
} = Astro.props;

// Format tanggal
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('id-ID', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};

// Format waktu baca
const formatReadingTime = (minutes: number) => {
  if (minutes < 1) return 'Kurang dari 1 menit';
  if (minutes === 1) return '1 menit';
  return `${minutes} menit`;
};

// Format jumlah kata
const formatWordCount = (count: number) => {
  if (count < 1000) return `${count} kata`;
  return `${(count / 1000).toFixed(1)}k kata`;
};
---

<div class={`article-stats-widget ${className}`}>
  <div class="widget-header">
    <h3 class="widget-title">
      <svg class="widget-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
      </svg>
      Statistik Artikel
    </h3>
  </div>
  
  <div class="widget-content">
    <!-- Waktu Baca -->
    <div class="stat-item">
      <div class="stat-icon">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-label">Waktu Baca</div>
        <div class="stat-value">{formatReadingTime(readingTime)}</div>
      </div>
    </div>
    
    <!-- Jumlah Kata -->
    <div class="stat-item">
      <div class="stat-icon">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-label">Jumlah Kata</div>
        <div class="stat-value">{formatWordCount(wordCount)}</div>
      </div>
    </div>
    
    <!-- Tanggal Publikasi -->
    <div class="stat-item">
      <div class="stat-icon">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-label">Diterbitkan</div>
        <div class="stat-value">{formatDate(publishDate)}</div>
      </div>
    </div>
    
    <!-- Terakhir Diperbarui -->
    {lastModified && (
      <div class="stat-item">
        <div class="stat-icon">
          <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
          </svg>
        </div>
        <div class="stat-content">
          <div class="stat-label">Terakhir Diperbarui</div>
          <div class="stat-value">{formatDate(lastModified)}</div>
        </div>
      </div>
    )}
    
    <!-- Kategori -->
    <div class="stat-item">
      <div class="stat-icon">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-label">Kategori</div>
        <div class="stat-value">{category}</div>
      </div>
    </div>
    
    <!-- Author -->
    <div class="stat-item">
      <div class="stat-icon">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-label">Penulis</div>
        <div class="stat-value">{author}</div>
      </div>
    </div>
  </div>
  
  <!-- Tags -->
  {tags.length > 0 && (
    <div class="widget-footer">
      <div class="tags-section">
        <div class="tags-label">Tags:</div>
        <div class="tags-list">
          {tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      </div>
    </div>
  )}
</div>

<style>
  @reference "@/styles/global.css";
  
  .article-stats-widget {
    @apply bg-white rounded-lg shadow-sm border border-neutral-200 p-4;
    transition: all 0.3s ease;
  }
  
  .article-stats-widget:hover {
    @apply shadow-md border-neutral-300;
    transform: translateY(-1px);
  }
  
  .widget-header {
    @apply mb-4 pb-3 border-b border-neutral-200;
  }
  
  .widget-title {
    @apply flex items-center gap-2 text-lg font-semibold text-neutral-800;
  }
  
  .widget-icon {
    @apply w-5 h-5 text-primary-600;
  }
  
  .widget-content {
    @apply space-y-3;
  }
  
  .stat-item {
    @apply flex items-center gap-3 p-2 rounded-md hover:bg-neutral-50 transition-colors duration-200;
  }
  
  .stat-icon {
    @apply flex-shrink-0 w-8 h-8 flex items-center justify-center rounded-full bg-primary-100 text-primary-600;
  }
  
  .stat-icon svg {
    @apply w-4 h-4;
  }
  
  .stat-content {
    @apply flex-1 min-w-0;
  }
  
  .stat-label {
    @apply text-sm text-neutral-600 font-medium;
  }
  
  .stat-value {
    @apply text-sm text-neutral-800 font-semibold truncate;
  }
  
  .widget-footer {
    @apply mt-4 pt-3 border-t border-neutral-200;
  }
  
  .tags-section {
    @apply space-y-2;
  }
  
  .tags-label {
    @apply text-sm font-medium text-neutral-600;
  }
  
  .tags-list {
    @apply flex flex-wrap gap-1;
  }
  
  .tag {
    @apply px-2 py-1 text-xs font-medium text-primary-700 bg-primary-100 rounded-md hover:bg-primary-200 transition-colors duration-200;
  }
  
  /* Dark mode styles */
  .dark .article-stats-widget {
    @apply bg-neutral-900 border-neutral-700;
  }
  
  .dark .article-stats-widget:hover {
    @apply border-neutral-600;
  }
  
  .dark .widget-header {
    @apply border-neutral-700;
  }
  
  .dark .widget-title {
    @apply text-neutral-200;
  }
  
  .dark .widget-icon {
    @apply text-primary-400;
  }
  
  .dark .stat-item:hover {
    @apply bg-neutral-800;
  }
  
  .dark .stat-icon {
    @apply bg-primary-900 text-primary-400;
  }
  
  .dark .stat-label {
    @apply text-neutral-400;
  }
  
  .dark .stat-value {
    @apply text-neutral-200;
  }
  
  .dark .widget-footer {
    @apply border-neutral-700;
  }
  
  .dark .tags-label {
    @apply text-neutral-400;
  }
  
  .dark .tag {
    @apply text-primary-300 bg-primary-900 hover:bg-primary-800;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .article-stats-widget {
      @apply p-3;
    }
    
    .widget-title {
      @apply text-base;
    }
    
    .stat-item {
      @apply gap-2 p-1.5;
    }
    
    .stat-icon {
      @apply w-6 h-6;
    }
    
    .stat-icon svg {
      @apply w-3 h-3;
    }
  }
</style>
