---
// Simple Header Component
import Logo from '@components/ui/Logo.astro';

export interface Props {
  className?: string;
  variant?: 'default' | 'transparent' | 'minimal';
  showSearch?: boolean;
  showDarkMode?: boolean;
}

const { 
  className = '',
  variant = 'default',
  showSearch = true,
  showDarkMode = true
} = Astro.props;

// Navigation links
const navigationLinks = [
  { name: 'Beranda', href: '/' },
  { name: 'Layanan', href: '/services' },
  { name: 'Blog', href: '/blog' },
  { name: 'Kontributor', href: '/contributors' },
  { name: 'Tentang', href: '/about' },
  { name: 'Kontak', href: '/contact' }
];
---

<header class={`simple-header ${variant} ${className}`}>
  <nav class="nav-container">
    <div class="container">
      <div class="nav-content">
        <!-- Logo -->
        <div class="nav-brand">
          <a href="/" class="brand-link">
            <Logo size="md" variant="default" />
          </a>
        </div>

        <!-- Desktop Navigation -->
        <div class="nav-desktop">
          <ul class="nav-links">
            {navigationLinks.map(link => (
              <li class="nav-item">
                <a href={link.href} class="nav-link">
                  {link.name}
                </a>
              </li>
            ))}
          </ul>
        </div>

        <!-- Right Side Actions -->
        <div class="nav-actions">
          <!-- Search -->
          {showSearch && (
            <button class="search-button" aria-label="Search">
              <i class="i-mdi-magnify"></i>
            </button>
          )}

          <!-- Dark Mode Toggle -->
          {showDarkMode && (
            <button class="dark-mode-toggle" aria-label="Toggle dark mode">
              <i class="i-mdi-weather-sunny dark-mode-icon"></i>
            </button>
          )}

          <!-- CTA Button -->
          <a href="/contact" class="cta-button">
            Hubungi Kami
          </a>

          <!-- Mobile Menu Toggle -->
          <button class="mobile-menu-toggle" aria-label="Toggle mobile menu" aria-expanded="false">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
          </button>
        </div>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div class="mobile-menu">
      <div class="mobile-menu-content">
        <div class="mobile-menu-header">
          <Logo size="sm" variant="default" />
          <button class="mobile-menu-close" aria-label="Close mobile menu">
            <i class="i-mdi-close"></i>
          </button>
        </div>
        
        <div class="mobile-menu-body">
          <ul class="mobile-nav-links">
            {navigationLinks.map(link => (
              <li class="mobile-nav-item">
                <a href={link.href} class="mobile-nav-link">
                  {link.name}
                </a>
              </li>
            ))}
          </ul>
          
          <div class="mobile-menu-actions">
            <a href="/contact" class="mobile-cta-button">
              Hubungi Kami
            </a>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  @reference "@/styles/global.css";
  .simple-header {
    @apply bg-white border-b border-neutral-200 sticky top-0 z-50;
  }
  
  .simple-header.transparent {
    @apply bg-transparent border-transparent;
  }
  
  .simple-header.minimal {
    @apply bg-neutral-50 border-neutral-100;
  }

  .nav-container {
    @apply w-full;
  }

  .nav-content {
    @apply flex items-center justify-between h-16 lg:h-20;
  }

  .nav-brand {
    @apply flex-shrink-0;
  }

  .brand-link {
    @apply flex items-center transition-opacity hover:opacity-80;
  }

  .nav-desktop {
    @apply hidden lg:flex flex-1 justify-center;
  }

  .nav-links {
    @apply flex items-center space-x-8;
  }

  .nav-item {
    @apply relative;
  }

  .nav-link {
    @apply text-neutral-700 hover:text-primary-600 transition-colors font-medium text-sm;
  }

  .nav-actions {
    @apply flex items-center gap-3;
  }

  .search-button {
    @apply p-2 text-neutral-600 hover:text-primary-600 transition-colors;
  }

  .dark-mode-toggle {
    @apply p-2 text-neutral-600 hover:text-primary-600 transition-colors;
  }

  .dark-mode-icon {
    @apply text-lg;
  }

  .cta-button {
    @apply hidden sm:flex items-center bg-primary-600 text-white px-4 py-2 rounded-lg font-medium text-sm transition-colors hover:bg-primary-700;
  }

  .mobile-menu-toggle {
    @apply lg:hidden p-2 text-neutral-600 hover:text-primary-600 transition-colors;
  }

  .hamburger-line {
    @apply block w-5 h-0.5 bg-current mb-1 last:mb-0 transition-all duration-200;
  }

  .mobile-menu-toggle[aria-expanded="true"] .hamburger-line:nth-child(1) {
    @apply rotate-45 translate-y-1.5;
  }

  .mobile-menu-toggle[aria-expanded="true"] .hamburger-line:nth-child(2) {
    @apply opacity-0;
  }

  .mobile-menu-toggle[aria-expanded="true"] .hamburger-line:nth-child(3) {
    @apply -rotate-45 -translate-y-1.5;
  }

  .mobile-menu {
    @apply fixed inset-0 z-50 lg:hidden opacity-0 invisible transition-all duration-300;
  }

  .mobile-menu.active {
    @apply opacity-100 visible;
  }

  .mobile-menu-content {
    @apply bg-white h-full flex flex-col;
  }

  .mobile-menu-header {
    @apply flex items-center justify-between p-4 border-b border-neutral-200;
  }

  .mobile-menu-close {
    @apply p-2 text-neutral-600 hover:text-primary-600 transition-colors;
  }

  .mobile-menu-body {
    @apply flex-1 overflow-y-auto p-4;
  }

  .mobile-nav-links {
    @apply space-y-2;
  }

  .mobile-nav-item {
    @apply border-b border-neutral-100 last:border-0;
  }

  .mobile-nav-link {
    @apply block py-4 text-neutral-700 hover:text-primary-600 transition-colors font-medium;
  }

  .mobile-menu-actions {
    @apply mt-6;
  }

  .mobile-cta-button {
    @apply flex items-center justify-center bg-primary-600 text-white px-4 py-3 rounded-lg font-medium transition-colors hover:bg-primary-700;
  }

  /* Dark mode styles */
  .dark .simple-header {
    @apply bg-neutral-900 border-neutral-700;
  }

  .dark .simple-header.transparent {
    @apply bg-transparent border-transparent;
  }

  .dark .simple-header.minimal {
    @apply bg-neutral-800 border-neutral-700;
  }

  .dark .nav-link {
    @apply text-neutral-300 hover:text-primary-400;
  }

  .dark .mobile-menu-content {
    @apply bg-neutral-900;
  }

  .dark .mobile-menu-header {
    @apply border-neutral-700;
  }

  .dark .mobile-nav-link {
    @apply text-neutral-300 hover:text-primary-400;
  }

  .dark .mobile-nav-item {
    @apply border-neutral-700;
  }
</style>

<script>
  // Simple header functionality
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileMenuClose = document.querySelector('.mobile-menu-close');

    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', function() {
        const isExpanded = this.getAttribute('aria-expanded') === 'true';
        this.setAttribute('aria-expanded', !isExpanded);
        mobileMenu.classList.toggle('active');
      });
    }

    if (mobileMenuClose && mobileMenu) {
      mobileMenuClose.addEventListener('click', function() {
        mobileMenuToggle?.setAttribute('aria-expanded', 'false');
        mobileMenu.classList.remove('active');
      });
    }

    // Dark mode toggle
    const darkModeToggle = document.querySelector('.dark-mode-toggle');
    
    if (darkModeToggle) {
      darkModeToggle.addEventListener('click', function() {
        document.documentElement.classList.toggle('dark');
        
        // Save preference
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('darkMode', isDark);
        
        // Update icon
        const icon = this.querySelector('.dark-mode-icon');
        if (icon) {
          icon.className = isDark ? 'i-mdi-weather-night dark-mode-icon' : 'i-mdi-weather-sunny dark-mode-icon';
        }
      });
      
      // Load saved preference
      const savedDarkMode = localStorage.getItem('darkMode');
      if (savedDarkMode === 'true') {
        document.documentElement.classList.add('dark');
        const icon = darkModeToggle.querySelector('.dark-mode-icon');
        if (icon) {
          icon.className = 'i-mdi-weather-night dark-mode-icon';
        }
      }
    }

    // Search functionality
    const searchButton = document.querySelector('.search-button');
    
    if (searchButton) {
      searchButton.addEventListener('click', function() {
        // Redirect to search page
        window.location.href = '/search';
      });
    }
  });
</script>
