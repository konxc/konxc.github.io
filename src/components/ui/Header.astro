---
// Header Component
import Logo from "@components/ui/Logo.astro";
import ThemeToggle from "@components/ui/ThemeToggle.astro";

export interface Props {
  className?: string;
  variant?: "default" | "transparent" | "minimal";
  showSearch?: boolean;
  showDarkMode?: boolean;
  showMobileMenu?: boolean;
}

const {
  className = "",
  variant = "default",
  showSearch = true,
  showDarkMode = true,
  showMobileMenu = true,
} = Astro.props;

// Navigation links
const navigationLinks = [
  { name: "Beranda", href: "/", current: false },
  { name: "Layanan", href: "/services", current: false },
  { name: "Blog", href: "/blog", current: false },
  { name: "Kontributor", href: "/contributors", current: false },
  { name: "Tentang", href: "/about", current: false },
  { name: "Kontak", href: "/contact", current: false },
];

// Service dropdown links
const serviceLinks = [
  {
    name: "IT Support",
    href: "/services/it-support",
    description: "Dukungan teknis 24/7",
  },
  {
    name: "Software Development",
    href: "/services/software-development",
    description: "Pengembangan aplikasi custom",
  },
  {
    name: "Digital Branding",
    href: "/services/digital-branding",
    description: "Strategi branding digital",
  },
  {
    name: "Retail Technology",
    href: "/services/retail-tech",
    description: "Solusi teknologi retail",
  },
  {
    name: "Cloud & SaaS",
    href: "/services/cloud-saas",
    description: "Layanan cloud dan SaaS",
  },
];
---

<header class={`header ${variant} ${className}`} role="banner">
  <nav
    class="nav-container"
    role="navigation"
    aria-label="Main navigation"
    id="navigation"
  >
    <div class="container">
      <div class="nav-content">
        <!-- Logo -->
        <div class="nav-brand">
          <a href="/" class="brand-link">
            <Logo size="md" variant="default" />
          </a>
        </div>

        <!-- Desktop Navigation -->
        <div class="nav-desktop">
          <ul class="nav-links" role="menubar">
            {
              navigationLinks.map((link) => (
                <li class="nav-item" role="none">
                  {link.name === "Layanan" ? (
                    <div class="nav-dropdown">
                      <button
                        class="nav-link dropdown-trigger"
                        aria-expanded="false"
                        aria-haspopup="true"
                        aria-controls="services-menu"
                        role="menuitem"
                      >
                        {link.name}
                        <i
                          class="i-mdi-chevron-down dropdown-icon"
                          aria-hidden="true"
                        />
                      </button>
                      <div
                        class="dropdown-menu"
                        id="services-menu"
                        role="menu"
                        aria-labelledby="services-trigger"
                      >
                        <div class="dropdown-content">
                          {serviceLinks.map((service) => (
                            <a
                              href={service.href}
                              class="dropdown-item"
                              role="menuitem"
                            >
                              <div class="dropdown-item-content">
                                <h4 class="dropdown-item-title">
                                  {service.name}
                                </h4>
                                <p class="dropdown-item-description">
                                  {service.description}
                                </p>
                              </div>
                            </a>
                          ))}
                        </div>
                      </div>
                    </div>
                  ) : (
                    <a href={link.href} class="nav-link" role="menuitem">
                      {link.name}
                    </a>
                  )}
                </li>
              ))
            }
          </ul>
        </div>

        <!-- Right Side Actions -->
        <div class="nav-actions">
          <!-- Search -->
          {
            showSearch && (
              <div class="search-container">
                <button
                  class="search-toggle"
                  aria-label="Toggle search"
                  aria-expanded="false"
                  aria-controls="search-dropdown"
                  aria-haspopup="true"
                >
                  <i class="i-mdi-magnify" aria-hidden="true" />
                </button>
                <div
                  class="search-dropdown"
                  id="search-dropdown"
                  role="search"
                  aria-label="Search form"
                >
                  <form class="search-form" role="search">
                    <div class="search-input-group">
                      <label for="search-input" class="sr-only">
                        Search articles and services
                      </label>
                      <input
                        type="search"
                        id="search-input"
                        placeholder="Cari artikel, layanan..."
                        class="search-input"
                        aria-label="Search articles and services"
                        autocomplete="off"
                      />
                      <button
                        type="submit"
                        class="search-submit"
                        aria-label="Submit search"
                      >
                        <i class="i-mdi-magnify" aria-hidden="true" />
                      </button>
                    </div>
                  </form>
                  <div class="search-suggestions">
                    <div class="search-suggestion-item">
                      <i class="i-mdi-clock-outline" />
                      <span>Pencarian terbaru</span>
                    </div>
                    <div class="search-suggestion-item">
                      <i class="i-mdi-trending-up" />
                      <span>Artikel populer</span>
                    </div>
                  </div>
                </div>
              </div>
            )
          }

          <!-- Dark Mode Toggle -->
          {showDarkMode && <ThemeToggle size="md" variant="icon" />}

          <!-- CTA Button -->
          <a href="/contact" class="cta-button">
            <span>Hubungi Kami</span>
            <i class="i-mdi-arrow-right"></i>
          </a>

          <!-- Mobile Menu Toggle -->
          {
            showMobileMenu && (
              <button
                class="mobile-menu-toggle"
                aria-label="Toggle mobile menu"
                aria-expanded="false"
                aria-controls="mobile-menu"
                aria-haspopup="true"
              >
                <span class="hamburger-line" aria-hidden="true" />
                <span class="hamburger-line" aria-hidden="true" />
                <span class="hamburger-line" aria-hidden="true" />
              </button>
            )
          }
        </div>
      </div>
    </div>

    <!-- Mobile Menu -->
    {
      showMobileMenu && (
        <div
          class="mobile-menu"
          id="mobile-menu"
          role="dialog"
          aria-modal="true"
          aria-labelledby="mobile-menu-title"
        >
          <div class="mobile-menu-content">
            <div class="mobile-menu-header">
              <Logo size="sm" variant="default" />
              <button class="mobile-menu-close" aria-label="Close mobile menu">
                <i class="i-mdi-close" />
              </button>
            </div>

            <div class="mobile-menu-body">
              <ul class="mobile-nav-links">
                {navigationLinks.map((link) => (
                  <li class="mobile-nav-item">
                    {link.name === "Layanan" ? (
                      <div class="mobile-nav-dropdown">
                        <button class="mobile-nav-link mobile-dropdown-trigger">
                          {link.name}
                          <i class="i-mdi-chevron-down" />
                        </button>
                        <div class="mobile-dropdown-content">
                          {serviceLinks.map((service) => (
                            <a href={service.href} class="mobile-dropdown-item">
                              <div class="mobile-dropdown-item-content">
                                <h4 class="mobile-dropdown-item-title">
                                  {service.name}
                                </h4>
                                <p class="mobile-dropdown-item-description">
                                  {service.description}
                                </p>
                              </div>
                            </a>
                          ))}
                        </div>
                      </div>
                    ) : (
                      <a href={link.href} class="mobile-nav-link">
                        {link.name}
                      </a>
                    )}
                  </li>
                ))}
              </ul>

              <div class="mobile-menu-actions">
                <a href="/contact" class="mobile-cta-button">
                  <span>Hubungi Kami</span>
                  <i class="i-mdi-arrow-right" />
                </a>
              </div>
            </div>
          </div>
        </div>
      )
    }
  </nav>
</header>

<style>
  @reference "@/styles/global.css";
  .header {
    @apply sticky top-0 z-50 border-b border-neutral-200 bg-white;
  }

  .header.transparent {
    @apply border-transparent bg-transparent;
  }

  .header.minimal {
    @apply border-neutral-100 bg-neutral-50;
  }

  .nav-container {
    @apply w-full;
  }

  .nav-content {
    @apply flex h-16 items-center justify-between lg:h-20;
  }

  .nav-brand {
    @apply shrink-0;
  }

  .brand-link {
    @apply flex items-center transition-opacity hover:opacity-80;
  }

  .nav-desktop {
    @apply hidden flex-1 justify-center lg:flex;
  }

  .nav-links {
    @apply flex items-center space-x-8;
  }

  .nav-item {
    @apply relative;
  }

  .nav-link {
    @apply hover:text-primary-600 text-sm font-medium text-neutral-700 transition-colors;
  }

  .nav-dropdown {
    @apply relative;
  }

  .dropdown-trigger {
    @apply flex items-center gap-1;
  }

  .dropdown-icon {
    @apply text-xs transition-transform;
  }

  .dropdown-trigger[aria-expanded="true"] .dropdown-icon {
    @apply rotate-180;
  }

  .dropdown-menu {
    @apply invisible absolute top-full left-0 mt-2 w-80 opacity-0 transition-all duration-200;
  }

  .dropdown-trigger[aria-expanded="true"] + .dropdown-menu {
    @apply visible opacity-100;
  }

  .dropdown-content {
    @apply rounded-lg border border-neutral-200 bg-white p-2 shadow-lg;
  }

  .dropdown-item {
    @apply block rounded-md p-3 transition-colors hover:bg-neutral-50;
  }

  .dropdown-item-content {
    @apply space-y-1;
  }

  .dropdown-item-title {
    @apply text-sm font-semibold text-neutral-900;
  }

  .dropdown-item-description {
    @apply text-xs text-neutral-600;
  }

  .nav-actions {
    @apply flex items-center gap-3;
  }

  .search-container {
    @apply relative;
  }

  .search-toggle {
    @apply hover:text-primary-600 p-2 text-neutral-600 transition-colors;
  }

  .search-dropdown {
    @apply invisible absolute top-full right-0 mt-2 w-80 opacity-0 transition-all duration-200;
  }

  .search-toggle[aria-expanded="true"] + .search-dropdown {
    @apply visible opacity-100;
  }

  .search-form {
    @apply rounded-lg border border-neutral-200 bg-white p-2 shadow-lg;
  }

  .search-input-group {
    @apply flex items-center;
  }

  .search-input {
    @apply flex-1 border-0 px-3 py-2 text-sm outline-none;
  }

  .search-submit {
    @apply hover:text-primary-600 p-2 text-neutral-600 transition-colors;
  }

  .search-suggestions {
    @apply mt-2 space-y-1;
  }

  .search-suggestion-item {
    @apply flex cursor-pointer items-center gap-2 rounded px-3 py-2 text-sm text-neutral-600 hover:bg-neutral-50;
  }

  .cta-button {
    @apply bg-primary-600 hover:bg-primary-700 hidden items-center gap-2 rounded-lg px-4 py-2 text-sm font-medium text-white transition-colors sm:flex;
  }

  .mobile-menu-toggle {
    @apply hover:text-primary-600 p-2 text-neutral-600 transition-colors lg:hidden;
  }

  .hamburger-line {
    @apply mb-1 block h-0.5 w-5 bg-current transition-all duration-200 last:mb-0;
  }

  .mobile-menu-toggle[aria-expanded="true"] .hamburger-line:nth-child(1) {
    @apply translate-y-1.5 rotate-45;
  }

  .mobile-menu-toggle[aria-expanded="true"] .hamburger-line:nth-child(2) {
    @apply opacity-0;
  }

  .mobile-menu-toggle[aria-expanded="true"] .hamburger-line:nth-child(3) {
    @apply -translate-y-1.5 -rotate-45;
  }

  .mobile-menu {
    @apply invisible fixed inset-0 z-50 opacity-0 transition-all duration-300 lg:hidden;
  }

  .mobile-menu.active {
    @apply visible opacity-100;
  }

  .mobile-menu-content {
    @apply flex h-full flex-col bg-white;
  }

  .mobile-menu-header {
    @apply flex items-center justify-between border-b border-neutral-200 p-4;
  }

  .mobile-menu-close {
    @apply hover:text-primary-600 p-2 text-neutral-600 transition-colors;
  }

  .mobile-menu-body {
    @apply flex-1 overflow-y-auto p-4;
  }

  .mobile-nav-links {
    @apply space-y-2;
  }

  .mobile-nav-item {
    @apply border-b border-neutral-100 last:border-0;
  }

  .mobile-nav-link {
    @apply hover:text-primary-600 block py-4 font-medium text-neutral-700 transition-colors;
  }

  .mobile-nav-dropdown {
    @apply space-y-2;
  }

  .mobile-dropdown-trigger {
    @apply flex w-full items-center justify-between;
  }

  .mobile-dropdown-content {
    @apply space-y-2 pl-4;
  }

  .mobile-dropdown-item {
    @apply block py-2;
  }

  .mobile-dropdown-item-content {
    @apply space-y-1;
  }

  .mobile-dropdown-item-title {
    @apply text-sm font-semibold text-neutral-900;
  }

  .mobile-dropdown-item-description {
    @apply text-xs text-neutral-600;
  }

  .mobile-menu-actions {
    @apply mt-6;
  }

  .mobile-cta-button {
    @apply bg-primary-600 hover:bg-primary-700 flex items-center justify-center gap-2 rounded-lg px-4 py-3 font-medium text-white transition-colors;
  }

  /* Dark mode styles */
  .dark .header {
    @apply border-neutral-700 bg-neutral-900;
  }

  .dark .header.transparent {
    @apply border-transparent bg-transparent;
  }

  .dark .header.minimal {
    @apply border-neutral-700 bg-neutral-800;
  }

  .dark .nav-link {
    @apply hover:text-primary-400 text-neutral-300;
  }

  .dark .dropdown-content {
    @apply border-neutral-700 bg-neutral-800;
  }

  .dark .dropdown-item {
    @apply hover:bg-neutral-700;
  }

  .dark .dropdown-item-title {
    @apply text-neutral-100;
  }

  .dark .dropdown-item-description {
    @apply text-neutral-400;
  }

  .dark .search-form {
    @apply border-neutral-700 bg-neutral-800;
  }

  .dark .search-input {
    @apply text-neutral-100 placeholder-neutral-400;
  }

  .dark .search-suggestion-item {
    @apply text-neutral-400 hover:bg-neutral-700;
  }

  .dark .mobile-menu-content {
    @apply bg-neutral-900;
  }

  .dark .mobile-menu-header {
    @apply border-neutral-700;
  }

  .dark .mobile-nav-link {
    @apply hover:text-primary-400 text-neutral-300;
  }

  .dark .mobile-nav-item {
    @apply border-neutral-700;
  }

  .dark .mobile-dropdown-item-title {
    @apply text-neutral-100;
  }

  .dark .mobile-dropdown-item-description {
    @apply text-neutral-400;
  }
</style>

<script>
  // Header functionality
  document.addEventListener("DOMContentLoaded", function () {
    // Mobile menu toggle
    const mobileMenuToggle = document.querySelector(".mobile-menu-toggle");
    const mobileMenu = document.querySelector(".mobile-menu");
    const mobileMenuClose = document.querySelector(".mobile-menu-close");

    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener("click", function (this: HTMLElement) {
        const isExpanded = this.getAttribute("aria-expanded") === "true";
        this.setAttribute("aria-expanded", String(!isExpanded));
        mobileMenu.classList.toggle("active");
      });
    }

    if (mobileMenuClose && mobileMenu) {
      mobileMenuClose.addEventListener("click", function () {
        mobileMenuToggle?.setAttribute("aria-expanded", "false");
        mobileMenu.classList.remove("active");
      });
    }

    // Search toggle
    const searchToggle = document.querySelector(".search-toggle");
    const searchDropdown = document.querySelector(".search-dropdown");

    if (searchToggle && searchDropdown) {
      searchToggle.addEventListener("click", function (this: HTMLElement) {
        const isExpanded = this.getAttribute("aria-expanded") === "true";
        this.setAttribute("aria-expanded", String(!isExpanded));
        searchDropdown.classList.toggle("opacity-100");
        searchDropdown.classList.toggle("visible");
      });
    }

    // Dropdown menus
    const dropdownTriggers = document.querySelectorAll(".dropdown-trigger");

    dropdownTriggers.forEach((trigger) => {
      trigger.addEventListener("click", function (this: HTMLElement, e: Event) {
        e.preventDefault();
        const isExpanded = this.getAttribute("aria-expanded") === "true";

        // Close all other dropdowns
        dropdownTriggers.forEach((otherTrigger) => {
          if (otherTrigger !== this) {
            otherTrigger.setAttribute("aria-expanded", "false");
            const otherMenu = otherTrigger.nextElementSibling;
            if (otherMenu) {
              otherMenu.classList.remove("opacity-100", "visible");
            }
          }
        });

        // Toggle current dropdown
        this.setAttribute("aria-expanded", String(!isExpanded));
        const menu = this.nextElementSibling;
        if (menu) {
          menu.classList.toggle("opacity-100");
          menu.classList.toggle("visible");
        }
      });
    });

    // Mobile dropdown menus
    const mobileDropdownTriggers = document.querySelectorAll(
      ".mobile-dropdown-trigger"
    );

    mobileDropdownTriggers.forEach((trigger) => {
      trigger.addEventListener("click", function (this: HTMLElement, e: Event) {
        e.preventDefault();
        const content = this.nextElementSibling;
        if (content) {
          content.classList.toggle("hidden");
        }
      });
    });

    // Dark mode is now handled by ThemeToggle component

    // Close dropdowns when clicking outside
    document.addEventListener("click", function (e) {
      const target = e.target as HTMLElement;
      if (!target?.closest(".nav-dropdown")) {
        dropdownTriggers.forEach((trigger) => {
          trigger.setAttribute("aria-expanded", "false");
          const menu = trigger.nextElementSibling;
          if (menu) {
            menu.classList.remove("opacity-100", "visible");
          }
        });
      }

      if (!target?.closest(".search-container")) {
        if (searchToggle && searchDropdown) {
          searchToggle.setAttribute("aria-expanded", "false");
          searchDropdown.classList.remove("opacity-100", "visible");
        }
      }
    });

    // Search functionality
    const searchForm = document.querySelector(".search-form");
    const searchInput = document.querySelector(".search-input");

    if (searchForm && searchInput) {
      searchForm.addEventListener("submit", function (e) {
        e.preventDefault();
        const query = (searchInput as HTMLInputElement).value.trim();
        if (query) {
          // Redirect to search page or perform search
          window.location.href = `/search?q=${encodeURIComponent(query)}`;
        }
      });
    }
  });
</script>
