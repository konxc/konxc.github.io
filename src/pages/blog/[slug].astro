---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogSlugLayout from "@layouts/BlogSlugLayout.astro";
import Card from "@components/ui/Card.astro";
import SocialShare from "@components/blog/SocialShare.astro";
import ReadingProgress from "@components/blog/ReadingProgress.astro";
import TableOfContents from "@components/blog/TableOfContents.astro";
import DarkModeToggle from "@components/blog/DarkModeToggle.astro";
import SmartBlogTestingSuite from "@components/blog/SmartBlogTestingSuite.astro";
import PopularPosts from "@components/blog/PopularPosts.astro";
import ReadingAnalytics from "@components/blog/ReadingAnalytics.astro";
import ArticleSeries from "@components/blog/ArticleSeries.astro";
import CommentsSystem from "@components/blog/CommentsSystem.astro";
import InteractiveDemos from "@components/blog/InteractiveDemos.astro";
import ReadingMode from "@components/blog/ReadingMode.astro";
import PerformanceOptimizer from "@components/blog/PerformanceOptimizer.astro";
import CopyPageMenu from "@components/blog/CopyPageMenu.astro";
import ContentRecommendations from "@components/contributors/ContentRecommendations.astro";
import ArticleLikeSection from "@components/blog/ArticleLikeSection.astro";
import NewsletterSignup from "@components/blog/NewsletterSignup.astro";
import NewsletterSection from "@components/blog/NewsletterSection.astro";
import CodeBlockEnhancer from "@components/blog/CodeBlockEnhancer.astro";
import ArticleStats from "@components/blog/ArticleStats.astro";
import RelatedArticles from "@components/blog/RelatedArticles.astro";

export const prerender = true;

type Props = {
  post: CollectionEntry<"blog">;
};

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post: CollectionEntry<"blog">) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post }: Props = Astro.props;
const { Content } = await post.render();

// Generate full URL for social sharing
const fullUrl = new URL(Astro.url.pathname, Astro.site).toString();

// Get all posts for related articles
const allPosts = await getCollection("blog");

// Filter related articles based on tags and category (exclude current post)
const getRelatedArticles = (
  currentPost: CollectionEntry<"blog">,
  maxArticles = 4
) => {
  const currentTags = currentPost.data.tags || [];
  const currentCategory = currentPost.data.category;

  // Score articles based on relevance
  const scoredArticles = allPosts
    .filter((p) => p.slug !== currentPost.slug) // Exclude current post
    .map((p) => {
      let score = 0;

      // Same category gets higher score
      if (p.data.category === currentCategory) {
        score += 10;
      }

      // Shared tags get points
      const sharedTags = (p.data.tags || []).filter((tag: string) =>
        currentTags.includes(tag)
      );
      score += sharedTags.length * 5;

      // Featured articles get bonus points
      if (p.data.featured) {
        score += 2;
      }

      // More recent articles get slight bonus
      const daysDiff =
        Math.abs(new Date().getTime() - p.data.publishDate.getTime()) /
        (1000 * 60 * 60 * 24);
      if (daysDiff < 30) score += 1;

      return { post: p, score };
    })
    .sort((a, b) => b.score - a.score) // Sort by relevance score
    .slice(0, maxArticles)
    .map(({ post: p }) => ({
      id: p.slug,
      title: p.data.title,
      excerpt: p.data.description,
      category: p.data.category,
      readTime: `${Math.ceil((p.body?.length || 1000) / 200)} min read`,
      slug: p.slug,
    }));

  return scoredArticles;
};

// Get related articles for current post
const relatedArticles = getRelatedArticles(post, 4);
---

<BlogSlugLayout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image}
  post={post}
  keywords={post.data.tags?.join(", ")}
  author={post.data.author}
>
  <!-- Blog Post Header -->
  <section
    class="from-primary-50 to-secondary-50 bg-linear-to-br py-20 md:py-32"
  >
    <div class="container">
      <div class="mx-auto max-w-4xl">
        <div class="my-8 text-center">
          <div
            class="text-primary-600 mb-4 text-sm font-semibold tracking-wide uppercase"
          >
            {post.data.category}
          </div>
          <h1 class="mb-6 text-4xl font-bold lg:text-5xl">
            {post.data.title}
          </h1>
          <p class="mb-8 text-xl text-neutral-600">
            {post.data.description}
          </p>

          <div
            class="mb-8 flex items-center justify-center gap-6 text-sm text-neutral-500"
          >
            <div class="flex items-center gap-2">
              <span
                class="bg-primary-100 text-primary-600 flex h-8 w-8 items-center justify-center rounded-full font-semibold"
              >
                {post.data.author.charAt(0)}
              </span>
              <span>By {post.data.author}</span>
            </div>
            <span>•</span>
            <span>{post.data.publishDate.toLocaleDateString("id-ID")}</span>
            {
              post.data.readingTime && (
                <>
                  <span>•</span>
                  <span>{post.data.readingTime} min read</span>
                </>
              )
            }
          </div>

          <div class="flex flex-wrap justify-center gap-2">
            {
              post.data.tags.map((tag: string) => (
                <span class="text-primary-600 rounded-full bg-white px-3 py-1 text-sm shadow-sm">
                  #{tag}
                </span>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Blog Post Content -->
  <section class="bg-white py-16 md:py-24">
    <div class="container">
      <div class="mx-auto max-w-6xl">
        <!-- Article Series -->
        <ArticleSeries currentPostSlug={post.slug} />

        <div class="grid gap-8 lg:grid-cols-4">
          <!-- Main Content -->
          <div class="lg:col-span-3">
            <div
              class="prose prose-lg blog-content max-w-none hover:translate-y-0"
            >
              <ReadingProgress />
              <!-- Reading Progress Bar -->
              <Content />
            </div>

            <!-- Interactive Demos -->
            <div class="mt-8">
              <InteractiveDemos />
            </div>

            <!-- Social Sharing -->
            <div class="mt-8">
              <SocialShare
                title={post.data.title}
                url={fullUrl}
                description={post.data.description}
              />
            </div>
          </div>

          <!-- Sidebar -->
          <div class="lg:col-span-1">
            <div class="sticky-sidebar space-y-2">
              <div class="flex items-center justify-between gap-2">
                <CopyPageMenu />
                <DarkModeToggle />
              </div>

              <!-- Table of Contents -->
              <TableOfContents />

              <!-- Article Stats -->
              <ArticleStats
                readingTime={post.data.readingTime || 5}
                wordCount={0}
                views={0}
                publishDate={post.data.publishDate}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Smart Blog Testing Suite (Development Only) -->
  <SmartBlogTestingSuite />

  <!-- Reading Analytics (Hidden) -->
  <ReadingAnalytics postSlug={post.slug} />

  <!-- Reading Mode -->
  <ReadingMode />

  <!-- Code Block Enhancer -->
  <!-- <CodeBlockEnhancer /> -->

  <!-- Performance Optimizer (Hidden) -->
  <PerformanceOptimizer />

  <!-- Related Articles Section -->
  {
    relatedArticles.length > 0 && (
      <RelatedArticles
        articles={relatedArticles}
        title="Artikel Terkait"
        columns={2}
        maxArticles={4}
      />
    )
  }
  <!-- Comments System -->
  <section class="comments-section">
    <div class="container">
      <div class="comments-container">
        <!-- Section Header -->
        <div class="comments-header">
          <h2 class="comments-title">Diskusi & Komentar</h2>
          <p class="comments-subtitle">
            Bagikan pemikiran Anda atau ajukan pertanyaan tentang artikel ini
          </p>
          <div class="comments-divider"></div>
        </div>

        <!-- Comments Component -->
        <div class="comments-content">
          <CommentsSystem postSlug={post.slug} />
        </div>
      </div>
    </div>
  </section>
</BlogSlugLayout>

<style>
  @reference "@/styles/global.css";

  /* Comments Section Styling */
  .comments-section {
    @apply relative overflow-hidden py-16 md:py-20;
    background: var(--gradient-cream-elegant);
  }

  .comments-section::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(
        circle at 20% 80%,
        rgba(194, 154, 108, 0.06) 0%,
        transparent 60%
      ),
      radial-gradient(
        circle at 80% 20%,
        rgba(160, 126, 84, 0.04) 0%,
        transparent 60%
      );
    pointer-events: none;
  }

  .comments-container {
    @apply relative z-10 mx-auto max-w-4xl;
  }

  /* Comments Header */
  .comments-header {
    @apply mb-12 text-center;
  }

  .comments-title {
    @apply mb-4 text-2xl font-bold tracking-tight md:text-3xl;
    background: linear-gradient(
      135deg,
      #3c2e26 0%,
      #5d4037 25%,
      #4a2c20 50%,
      #2d1810 100%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 2px 4px rgba(60, 46, 38, 0.1);
  }

  .comments-subtitle {
    @apply mx-auto mb-6 max-w-2xl text-base leading-relaxed font-medium text-amber-900/80 md:text-lg;
    text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
  }

  .comments-divider {
    @apply mx-auto h-1 w-16 rounded-full;
    background: linear-gradient(
      90deg,
      #8b6914 0%,
      #a0751a 25%,
      #b8860b 50%,
      #cd9a1b 75%,
      #daa520 100%
    );
    box-shadow: 0 2px 4px rgba(139, 105, 20, 0.2);
  }

  /* Comments Content */
  .comments-content {
    @apply rounded-2xl border bg-white p-6 shadow-lg shadow-neutral-900/10 md:p-8;
    border-color: rgba(194, 154, 108, 0.15);
    box-shadow:
      0 10px 25px rgba(194, 154, 108, 0.08),
      0 4px 10px rgba(194, 154, 108, 0.05),
      inset 0 1px 0 rgba(255, 255, 255, 0.9);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .comments-section {
      @apply py-12;
    }

    .comments-header {
      @apply mb-8;
    }

    .comments-title {
      @apply text-xl;
    }

    .comments-subtitle {
      @apply text-sm;
    }

    .comments-content {
      @apply p-4;
    }
  }

  .sticky-sidebar {
    @apply sticky top-6;
    /* max-height: calc(100vh - 4rem); */
    /* overflow-y: auto; */
  }

  .sticky-sidebar::-webkit-scrollbar {
    width: 4px;
  }

  .sticky-sidebar::-webkit-scrollbar-track {
    background: transparent;
  }

  .sticky-sidebar::-webkit-scrollbar-thumb {
    background: #e5e7eb;
    border-radius: 2px;
  }

  .sticky-sidebar::-webkit-scrollbar-thumb:hover {
    background: #d1d5db;
  }

  /* Sidebar Widgets */
  .sidebar-widget {
    background-color: rgb(255 255 255);
    border-radius: 0.5rem;
    box-shadow:
      0 1px 3px 0 rgb(0 0 0 / 0.1),
      0 1px 2px -1px rgb(0 0 0 / 0.1);
    border: 1px solid rgb(229 231 235);
    overflow: hidden;
  }

  .sidebar-widget:first-child {
    /* border-top: 4px solid rgb(147 51 234); */
  }

  .sidebar-widget h3 {
    font-size: 0.875rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 0.75rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 1rem;
  }

  .sidebar-widget > div:not(:first-child) {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 1rem;
  }

  /* Dark mode sidebar */
  .dark .sidebar-widget {
    background-color: rgb(38 38 38);
    border-color: rgb(64 64 64);
  }

  .dark .sidebar-widget h3 {
    color: rgb(245 245 245);
  }

  .dark .sidebar-widget .text-neutral-600 {
    color: rgb(156 163 175);
  }

  .dark .sidebar-widget .text-neutral-900 {
    color: rgb(245 245 245);
  }

  /* Blog Content Styling - Medium/Substack Inspired */
  .blog-content {
    color: rgb(31 41 55);
    line-height: 1.625;
  }

  /* Typography */
  .blog-content h1 {
    font-size: 2.25rem;
    font-weight: 700;
    color: rgb(17 24 39);
    margin-bottom: 2rem;
    margin-top: 3rem;
    line-height: 1.1;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  .blog-content h2 {
    font-size: 1.875rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 1.5rem;
    margin-top: 2.5rem;
    line-height: 1.1;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  .blog-content h3 {
    font-size: 1.5rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 1rem;
    margin-top: 2rem;
    line-height: 1.1;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  .blog-content h4 {
    font-size: 1.25rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 0.75rem;
    margin-top: 1.5rem;
    line-height: 1.1;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  .blog-content h5 {
    font-size: 1.125rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 0.5rem;
    margin-top: 1rem;
    line-height: 1.1;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  .blog-content h6 {
    font-size: 1rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 0.5rem;
    margin-top: 1rem;
    line-height: 1.1;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  /* Paragraphs */
  .blog-content p {
    font-size: 1.125rem;
    line-height: 2;
    margin-bottom: 1.5rem;
    color: rgb(55 65 81);
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
    font-weight: 400;
  }

  /* First paragraph styling */
  .blog-content p:first-of-type {
    font-size: 1.25rem;
    line-height: 2;
    margin-bottom: 2rem;
    color: rgb(31 41 55);
    font-weight: 500;
  }

  /* Links */
  .blog-content a {
    color: rgb(147 51 234);
    text-decoration: underline;
    text-decoration-thickness: 2px;
    text-underline-offset: 2px;
    transition: color 0.15s ease-in-out;
    font-weight: 500;
  }

  .blog-content a:hover {
    color: rgb(126 34 206);
    text-decoration-color: rgb(126 34 206);
  }

  /* Lists */
  .blog-content ul {
    margin-bottom: 1.5rem;
  }

  .blog-content ul > li + li {
    margin-top: 0.5rem;
  }

  .blog-content ol {
    margin-bottom: 1.5rem;
  }

  .blog-content ol > li + li {
    margin-top: 0.5rem;
  }

  .blog-content li {
    font-size: 1.125rem;
    line-height: 1.75;
    color: rgb(55 65 81);
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  .blog-content ul li {
    position: relative;
    padding-left: 1.5rem;
  }

  .blog-content ul li::before {
    content: "•";
    position: absolute;
    left: 0;
    color: rgb(147 51 234);
    font-weight: 700;
  }

  .blog-content ol li {
    padding-left: 0.5rem;
  }

  /* Blockquotes */
  .blog-content blockquote {
    border-left: 4px solid rgb(147 51 234);
    padding-left: 1.5rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    margin-bottom: 1.5rem;
    font-style: italic;
    color: rgb(75 85 99);
    background-color: rgb(249 250 251);
    border-top-right-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
    font-size: 1.125rem;
    line-height: 1.75;
  }

  .blog-content blockquote p {
    margin-bottom: 0;
  }

  /* Code */
  .blog-content code {
    background-color: rgb(243 244 246);
    color: rgb(31 41 55);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    font-family: "JetBrains Mono", "Fira Code", "Monaco", "Consolas", monospace;
  }

  .blog-content pre {
    background-color: rgb(17 24 39);
    color: rgb(243 244 246);
    padding: 1.5rem;
    border-radius: 0.5rem;
    margin-bottom: 1.5rem;
    overflow-x: auto;
    font-family: "JetBrains Mono", "Fira Code", "Monaco", "Consolas", monospace;
    font-size: 0.875rem;
    line-height: 1.6;
  }

  .blog-content pre code {
    background-color: transparent;
    color: rgb(243 244 246);
    padding: 0;
  }

  /* Images */
  .blog-content img {
    width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin-bottom: 2rem;
    box-shadow:
      0 10px 15px -3px rgb(0 0 0 / 0.1),
      0 4px 6px -4px rgb(0 0 0 / 0.1);
  }

  .blog-content figure {
    margin-bottom: 2rem;
  }

  .blog-content figcaption {
    font-size: 0.875rem;
    color: rgb(107 114 128);
    margin-top: 0.5rem;
    text-align: center;
    font-style: italic;
  }

  /* Tables */
  .blog-content table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1.5rem;
  }

  .blog-content th {
    background-color: rgb(243 244 246);
    color: rgb(17 24 39);
    font-weight: 600;
    padding: 1rem;
    text-align: left;
    border-bottom: 2px solid rgb(229 231 235);
  }

  .blog-content td {
    padding: 1rem;
    border-bottom: 1px solid rgb(229 231 235);
    color: rgb(55 65 81);
  }

  .blog-content tr:hover {
    background-color: rgb(249 250 251);
  }

  /* Horizontal Rule */
  .blog-content hr {
    border: 0;
    border-top: 2px solid rgb(229 231 235);
    margin: 3rem 0;
  }

  /* Strong/Bold */
  .blog-content strong {
    font-weight: 600;
    color: rgb(17 24 39);
  }

  /* Emphasis/Italic */
  .blog-content em {
    font-style: italic;
    color: rgb(55 65 81);
  }

  /* Small text */
  .blog-content small {
    font-size: 0.875rem;
    color: rgb(107 114 128);
  }

  /* Dark mode adjustments */
  .dark .blog-content {
    color: rgb(229 231 235);
  }

  .dark .blog-content h1,
  .dark .blog-content h2,
  .dark .blog-content h3,
  .dark .blog-content h4,
  .dark .blog-content h5,
  .dark .blog-content h6 {
    color: rgb(243 244 246);
  }

  .dark .blog-content p {
    color: rgb(209 213 219);
  }

  .dark .blog-content p:first-of-type {
    color: rgb(229 231 235);
  }

  .dark .blog-content li {
    color: rgb(209 213 219);
  }

  .dark .blog-content blockquote {
    background-color: rgb(38 38 38);
    color: rgb(209 213 219);
    border-color: rgb(147 51 234);
  }

  .dark .blog-content code {
    background-color: rgb(38 38 38);
    color: rgb(229 231 235);
  }

  .dark .blog-content th {
    background-color: rgb(38 38 38);
    color: rgb(243 244 246);
    border-color: rgb(75 85 99);
  }

  .dark .blog-content td {
    color: rgb(209 213 219);
    border-color: rgb(75 85 99);
  }

  .dark .blog-content tr:hover {
    background-color: rgb(38 38 38);
  }

  .dark .blog-content hr {
    border-color: rgb(75 85 99);
  }

  .dark .blog-content strong {
    color: rgb(243 244 246);
  }

  .dark .blog-content em {
    color: rgb(209 213 219);
  }

  .dark .blog-content small {
    color: rgb(156 163 175);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .blog-content h1 {
      font-size: 1.875rem;
      margin-bottom: 1.5rem;
      margin-top: 2rem;
    }

    .blog-content h2 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      margin-top: 1.5rem;
    }

    .blog-content h3 {
      font-size: 1.25rem;
      margin-bottom: 0.75rem;
      margin-top: 1rem;
    }

    .blog-content p {
      font-size: 1rem;
      line-height: 1.75;
      margin-bottom: 1rem;
    }

    .blog-content p:first-of-type {
      font-size: 1.125rem;
      line-height: 1.75;
      margin-bottom: 1.5rem;
    }

    .blog-content li {
      font-size: 1rem;
      line-height: 1.5;
    }

    .blog-content blockquote {
      padding-left: 1rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      margin-bottom: 1rem;
      font-size: 1rem;
    }

    .blog-content pre {
      padding: 1rem;
      margin-bottom: 1rem;
      font-size: 0.75rem;
    }
  }

  /* Print styles */
  @media print {
    .blog-content {
      color: rgb(0 0 0);
    }

    .blog-content h1,
    .blog-content h2,
    .blog-content h3,
    .blog-content h4,
    .blog-content h5,
    .blog-content h6 {
      color: rgb(0 0 0);
    }

    .blog-content p,
    .blog-content li {
      color: rgb(0 0 0);
    }

    .blog-content a {
      color: rgb(0 0 0);
      text-decoration: underline;
    }

    .blog-content blockquote {
      background-color: rgb(255 255 255);
      border-color: rgb(209 213 219);
      color: rgb(0 0 0);
    }

    .blog-content code {
      background-color: rgb(243 244 246);
      color: rgb(0 0 0);
    }
  }
</style>

<script>
  // Sidebar functionality
  document.addEventListener("DOMContentLoaded", function () {
    // Reading progress tracking
    let startTime = Date.now();
    let readingProgress = 0;
    let wordCount = 0;

    // Calculate word count
    const content = document.querySelector(".blog-content");
    if (content) {
      const text = content.textContent || "";
      wordCount = text.split(/\s+/).filter((word) => word.length > 0).length;
      const wordCountEl = document.getElementById("word-count");
      if (wordCountEl) {
        wordCountEl.textContent = wordCount.toLocaleString();
      }
    }

    // Reading progress tracking
    function updateReadingProgress() {
      const scrollTop =
        window.pageYOffset || document.documentElement.scrollTop;
      const docHeight =
        document.documentElement.scrollHeight - window.innerHeight;
      const scrollPercent = Math.round((scrollTop / docHeight) * 100);

      readingProgress = Math.min(scrollPercent, 100);

      // Update progress bar
      const progressBar = document.getElementById("reading-progress-bar");
      const progressText = document.getElementById("reading-progress-text");

      if (progressBar) {
        progressBar.style.width = readingProgress + "%";
      }

      if (progressText) {
        progressText.textContent = readingProgress + "%";
      }

      // Update reading time
      const elapsedTime = Math.round((Date.now() - startTime) / 60000); // minutes
      const readingTimeElement = document.querySelector("[data-reading-time]");
      const estimatedReadingTime = readingTimeElement
        ? parseInt(readingTimeElement.textContent || "5")
        : 5;
      const remainingTime = Math.max(0, estimatedReadingTime - elapsedTime);

      const timeElapsedEl = document.getElementById("reading-time-elapsed");
      const timeRemainingEl = document.getElementById("reading-time-remaining");

      if (timeElapsedEl) {
        timeElapsedEl.textContent = elapsedTime + " min";
      }

      if (timeRemainingEl) {
        timeRemainingEl.textContent = "Estimasi: " + remainingTime + " min";
      }
    }

    // Scroll event listener
    window.addEventListener("scroll", updateReadingProgress);

    // Quick actions
    const scrollToTopBtn = document.getElementById("scroll-to-top");
    if (scrollToTopBtn) {
      scrollToTopBtn.addEventListener("click", function () {
        window.scrollTo({ top: 0, behavior: "smooth" });
      });
    }

    const scrollToCommentsBtn = document.getElementById("scroll-to-comments");
    if (scrollToCommentsBtn) {
      scrollToCommentsBtn.addEventListener("click", function () {
        const commentsSection =
          document.querySelector(".comments-system") ||
          document.querySelector('[class*="comment"]');
        if (commentsSection) {
          commentsSection.scrollIntoView({ behavior: "smooth" });
        }
      });
    }

    const toggleDarkModeBtn = document.getElementById("toggle-dark-mode");
    if (toggleDarkModeBtn) {
      toggleDarkModeBtn.addEventListener("click", function () {
        document.documentElement.classList.toggle("dark");
        const isDark = document.documentElement.classList.contains("dark");
        this.textContent = isDark ? "☀️ Mode Terang" : "🌙 Mode Gelap";

        // Save preference
        localStorage.setItem("darkMode", isDark.toString());
      });

      // Load saved preference
      const savedDarkMode = localStorage.getItem("darkMode") === "true";
      if (savedDarkMode) {
        document.documentElement.classList.add("dark");
        toggleDarkModeBtn.textContent = "☀️ Mode Terang";
      }
    }

    const printArticleBtn = document.getElementById("print-article");
    if (printArticleBtn) {
      printArticleBtn.addEventListener("click", function () {
        window.print();
      });
    }

    // Newsletter signup
    const newsletterForm = document.querySelector(".sidebar-widget:last-child");
    if (newsletterForm) {
      const emailInput = newsletterForm.querySelector(
        'input[type="email"]'
      ) as HTMLInputElement;
      const submitButton = newsletterForm.querySelector(
        "button"
      ) as HTMLButtonElement;

      if (submitButton && emailInput) {
        submitButton.addEventListener("click", function (e) {
          e.preventDefault();
          const email = emailInput.value;

          if (email) {
            // Show success message
            const originalText = submitButton.textContent;
            submitButton.textContent = "✓ Terkirim!";
            submitButton.classList.add("bg-green-500", "text-white");

            setTimeout(() => {
              submitButton.textContent = originalText;
              submitButton.classList.remove("bg-green-500", "text-white");
              emailInput.value = "";
            }, 2000);
          }
        });
      }
    }

    // Initialize reading progress
    updateReadingProgress();
  });
</script>
